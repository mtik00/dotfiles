#!/usr/bin/env bash

# find_edit_env_script.sh
# Searches for a file named 'env.sh' in a '.secrets' folder,
# starting from the current directory and moving up until
# a configurable top-level directory
# Opens the file in vim for editing, then outputs a command to source the file

# Default values
MAX_DEPTH=10        # Maximum number of parent directories to search
TOP_DIR="$HOME"     # Default top-level directory to stop at

# Parse command line arguments
while [[ $# -gt 0 ]]; do
  case "$1" in
    --top-dir=*)
      TOP_DIR="${1#*=}"
      shift
      ;;
    --max-depth=*)
      MAX_DEPTH="${1#*=}"
      shift
      ;;
    *)
      echo "Usage: source $0 [--top-dir=/path/to/stop] [--max-depth=N]" >&2
      return 1 2>/dev/null || exit 1
      ;;
  esac
done

# Detect if the script is being sourced
(return 0 2>/dev/null) && SOURCED=true || SOURCED=false

if [ "$SOURCED" = false ]; then
  echo "Error: This script needs to be sourced to modify your shell environment." >&2
  echo "Usage: source $0 [--top-dir=/path/to/stop] [--max-depth=N]" >&2
  exit 1
fi

# Resolve the absolute path of TOP_DIR
TOP_DIR=$(cd "$TOP_DIR" 2>/dev/null && pwd)
if [ -z "$TOP_DIR" ]; then
  echo "Error: The specified top directory does not exist or is not accessible." >&2
  return 1
fi

# Function to edit and source the file
edit_and_source() {
  local env_file="$1"
  echo "Found .secrets/env.sh at: $env_file"

  # Edit the file with vim
  echo "Opening file in vim for editing..."
  vim "$env_file"

  # Check vim's exit status
  vim_status=$?
  if [ $vim_status -eq 0 ]; then
    echo "vim exited successfully. Sourcing the environment file..."
    source "$env_file"
    return 0
  else
    echo "vim exited with error code $vim_status. Not sourcing the file." >&2
    return $vim_status
  fi
}

# First check the current directory before starting the upward search
if [ -f "./.secrets/env.sh" ]; then
  edit_and_source "./.secrets/env.sh"
  return $?
fi

# Start from the current directory for the upward search
current_dir=$(pwd)
depth=0

while [ "$current_dir" != "$TOP_DIR" ] && [ "$current_dir" != "/" ] && [ $depth -lt $MAX_DEPTH ]; do
  # Check if .secrets/env.sh exists in the current directory
  if [ -f "$current_dir/.secrets/env.sh" ]; then
    edit_and_source "$current_dir/.secrets/env.sh"
    return $?
  fi

  # Move up to the parent directory
  current_dir=$(dirname "$current_dir")
  ((depth++))
done

# If we get here, we didn't find the file
if [ "$current_dir" = "$TOP_DIR" ]; then
  echo "Reached top-level directory ($TOP_DIR) without finding .secrets/env.sh" >&2
elif [ "$current_dir" = "/" ]; then
  echo "Reached filesystem root without finding .secrets/env.sh" >&2
else
  echo "Reached maximum search depth ($MAX_DEPTH) without finding .secrets/env.sh" >&2
fi
return 1
